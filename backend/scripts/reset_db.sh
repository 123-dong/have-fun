#!/bin/zsh

# Load environment variables from .env
export $(grep -v '^#' .env | xargs)

# Drop and recreate the whole database
docker exec -i rust_db psql -U $POSTGRES_USER -d postgres -c "DROP DATABASE IF EXISTS $POSTGRES_DB;"
docker exec -i rust_db psql -U $POSTGRES_USER -d postgres -c "CREATE DATABASE $POSTGRES_DB;"

SQL=$(cat <<EOF
-- Enable pgcrypto extension
CREATE EXTENSION IF NOT EXISTS pgcrypto;

-- Create users table with UUID auto-generated by gen_random_uuid()
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);

-- Insert sample data
INSERT INTO users (name, email) VALUES
('Alice', 'alice@example.com'),
('Bob', 'bob@example.com'),
('Charlie', 'charlie@example.com'),
('Diana', 'diana@example.com'),
('Eve', 'eve@example.com'),
('Frank', 'frank@example.com'),
('Grace', 'grace@example.com');
EOF
)

# Apply schema + seed data into the freshly created DB
docker exec -i rust_db psql -U $POSTGRES_USER -d $POSTGRES_DB -c "$SQL"

echo "@@@! Database dropped, recreated, and initialized with sample data."
